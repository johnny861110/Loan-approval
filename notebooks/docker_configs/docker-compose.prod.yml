version: '3.8'

services:
  # Nginx 反向代理
  nginx:
    image: nginx:1.25-alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro  # SSL 證書目錄 (如需要)
    depends_on:
      - api
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # FastAPI 主應用 - 生產版本
  api:
    build:
      context: .
      dockerfile: Dockerfile.prod
    environment:
      - PYTHONPATH=/app
      - REDIS_URL=redis://redis:6379/0
      - DATABASE_URL=${DATABASE_URL:-sqlite:///./app.db}
      - SECRET_KEY=${SECRET_KEY}
      - LOG_LEVEL=INFO
      - WORKERS=4
    volumes:
      - app_models:/app/app/models
      - app_logs:/app/logs
      - app_outputs:/app/outputs
    depends_on:
      - redis
    restart: unless-stopped
    deploy:
      resources:
        limits:
          memory: 2G
        reservations:
          memory: 1G
    healthcheck:
      test: ["CMD", "python", "-c", "import requests; requests.get('http://localhost:8000/health', timeout=5)"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

  # Redis - 生產配置
  redis:
    image: redis:7-alpine
    command: redis-server --appendonly yes --requirepass ${REDIS_PASSWORD:-defaultpassword}
    environment:
      - REDIS_PASSWORD=${REDIS_PASSWORD:-defaultpassword}
    volumes:
      - redis_data:/data
      - ./config/redis.conf:/usr/local/etc/redis/redis.conf:ro
    restart: unless-stopped
    deploy:
      resources:
        limits:
          memory: 512M
        reservations:
          memory: 256M
    healthcheck:
      test: ["CMD", "redis-cli", "--no-auth-warning", "-a", "${REDIS_PASSWORD:-defaultpassword}", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Celery Worker - 生產版本
  worker:
    build:
      context: .
      dockerfile: Dockerfile.prod
    command: celery -A app.tasks worker --loglevel=info --concurrency=2
    environment:
      - PYTHONPATH=/app
      - REDIS_URL=redis://:${REDIS_PASSWORD:-defaultpassword}@redis:6379/0
      - LOG_LEVEL=INFO
    volumes:
      - app_models:/app/app/models
      - app_logs:/app/logs
      - app_outputs:/app/outputs
    depends_on:
      - redis
    restart: unless-stopped
    deploy:
      resources:
        limits:
          memory: 2G
        reservations:
          memory: 1G

  # Celery Flower - 監控 (可選)
  flower:
    build:
      context: .
      dockerfile: Dockerfile.prod
    command: celery -A app.tasks flower --port=5555
    ports:
      - "5555:5555"
    environment:
      - PYTHONPATH=/app
      - REDIS_URL=redis://:${REDIS_PASSWORD:-defaultpassword}@redis:6379/0
      - FLOWER_BASIC_AUTH=${FLOWER_USER:-admin}:${FLOWER_PASSWORD:-admin}
    depends_on:
      - redis
      - worker
    restart: unless-stopped
    profiles:
      - monitoring

  # Prometheus 監控 (可選)
  prometheus:
    image: prom/prometheus:latest
    ports:
      - "9090:9090"
    volumes:
      - ./config/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
    restart: unless-stopped
    profiles:
      - monitoring

  # Grafana 儀表板 (可選)
  grafana:
    image: grafana/grafana:latest
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_PASSWORD:-admin}
    volumes:
      - grafana_data:/var/lib/grafana
      - ./config/grafana:/etc/grafana/provisioning
    depends_on:
      - prometheus
    restart: unless-stopped
    profiles:
      - monitoring

volumes:
  redis_data:
    driver: local
  app_models:
    driver: local
  app_logs:
    driver: local
  app_outputs:
    driver: local
  prometheus_data:
    driver: local
  grafana_data:
    driver: local

networks:
  default:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16
